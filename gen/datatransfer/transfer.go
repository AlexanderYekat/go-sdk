// Code generated by sdkgen. DO NOT EDIT.

//nolint
package datatransfer

import (
	"context"

	"google.golang.org/grpc"

	datatransfer "github.com/yandex-cloud/go-genproto/yandex/cloud/datatransfer/v1"
	"github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
)

//revive:disable

// TransferServiceClient is a datatransfer.TransferServiceClient with
// lazy GRPC connection initialization.
type TransferServiceClient struct {
	getConn func(ctx context.Context) (*grpc.ClientConn, error)
}

// Activate implements datatransfer.TransferServiceClient
func (c *TransferServiceClient) Activate(ctx context.Context, in *datatransfer.ActivateTransferRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	conn, err := c.getConn(ctx)
	if err != nil {
		return nil, err
	}
	return datatransfer.NewTransferServiceClient(conn).Activate(ctx, in, opts...)
}

// Create implements datatransfer.TransferServiceClient
func (c *TransferServiceClient) Create(ctx context.Context, in *datatransfer.CreateTransferRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	conn, err := c.getConn(ctx)
	if err != nil {
		return nil, err
	}
	return datatransfer.NewTransferServiceClient(conn).Create(ctx, in, opts...)
}

// Deactivate implements datatransfer.TransferServiceClient
func (c *TransferServiceClient) Deactivate(ctx context.Context, in *datatransfer.DeactivateTransferRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	conn, err := c.getConn(ctx)
	if err != nil {
		return nil, err
	}
	return datatransfer.NewTransferServiceClient(conn).Deactivate(ctx, in, opts...)
}

// Delete implements datatransfer.TransferServiceClient
func (c *TransferServiceClient) Delete(ctx context.Context, in *datatransfer.DeleteTransferRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	conn, err := c.getConn(ctx)
	if err != nil {
		return nil, err
	}
	return datatransfer.NewTransferServiceClient(conn).Delete(ctx, in, opts...)
}

// Get implements datatransfer.TransferServiceClient
func (c *TransferServiceClient) Get(ctx context.Context, in *datatransfer.GetTransferRequest, opts ...grpc.CallOption) (*datatransfer.Transfer, error) {
	conn, err := c.getConn(ctx)
	if err != nil {
		return nil, err
	}
	return datatransfer.NewTransferServiceClient(conn).Get(ctx, in, opts...)
}

// Update implements datatransfer.TransferServiceClient
func (c *TransferServiceClient) Update(ctx context.Context, in *datatransfer.UpdateTransferRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	conn, err := c.getConn(ctx)
	if err != nil {
		return nil, err
	}
	return datatransfer.NewTransferServiceClient(conn).Update(ctx, in, opts...)
}
